# Appコンテナからのログの受信
<source>
  @type forward
  port 24224
  # logging driverを使う場合
  bind 127.0.0.1
  # 外部から受信する場合(例: ElasticSearchに送るfluentd)
  # プライベートIPを設定するのが望ましい
  # bind 0.0.0.0
  # bind "#{ENV['PRIVATE_IP']}"
  tag ocs.app
</source>

# Baseコンテナ内部のログ
<source>
  @type systemd
  path /run/log/journal
  # 送信対象とするユニットを制限する場合
  # matches [{ "_SYSTEMD_UNIT": ["sshd.service", "serf.service", "docker.service", "cadvisor.service"]}]
  tag ocs.base.*
</source>

<filter ocs.**>
  @type record_transformer
  <record>
    ocs_log_type ${tag}
    ocs_cloud_instance_address "#{ENV['PRIVATE_IP']}"
    ocs_vcc_id "#{ENV['VCCC_ID']}"
    # ocs_unit_gruop_id
    # ocs_unit_name
    # ocs_node_id
  </record>
</filter>

<match ocs.**>
  @type copy
  <store>
    @type forward
    send_timeout 60s
    recover_wait 10s
    hard_timeout 60s

    # TODO: forward to controller
    <server>
      name vc_controller
      host "#{ENV['VCCCTR_IPADDR']}"
    </server>
  </store>

  @include config.d/ocs-output/*.conf

  #--CUSTOMIZE--
  # other fluentd
  # <store>
  #   @type forward
  #   send_timeout 60s
  #   recover_wait 10s
  #   hard_timeout 60s
  #
  #   <server>
  #       name vc_app_log
  #       host "10.0.0.8"
  #       # port 24224
  #   </server>
  # </store>

</match>

<label @FLUENT_LOG>
  <filter fluent.*>
    @type record_transformer
    <record>
      host "#{Socket.gethostname}"
      original_tag ${tag}
    </record>
  </filter>

  <match fluent.*>
    @type stdout
  </match>
</label>

@include config.d/*.conf
