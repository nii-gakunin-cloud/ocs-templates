[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "memeid-extractor"
dynamic = ["version"]
description = "Extract meme IDs and metadata from Jupyter notebooks created with Jupyter-LC_wrapper for educational analytics and research."
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
keywords = [
  "jupyter",
  "notebook", 
  "metadata",
  "cli",
  "educational-analytics",
  "research",
  "meme-id",
  "lineage",
  "lc-wrapper",
]
authors = [
  { name = "NII Gakunin Cloud", email = "cld-office-support@nii.ac.jp" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Education",
  "Intended Audience :: Developers", 
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Framework :: Jupyter",
  "Topic :: Education",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
]
dependencies = [
  "watchdog>=6.0.0",
  "nbformat>=5.10.4",
]

[project.urls]
Repository = "https://github.com/nii-gakunin-cloud/ocs-templates"

[project.scripts]
memeid-extractor = "memeid_extractor.cli:memeid_extractor"

[tool.hatch.version]
path = "src/memeid_extractor/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/memeid_extractor tests}"

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "pytest-timeout",
]

[tool.coverage.run]
source_pkgs = ["memeid_extractor", "tests"]
branch = true
parallel = true
omit = [
  "src/memeid_extractor/__about__.py",
]

[tool.coverage.paths]
memeid_extractor = ["src/memeid_extractor", "*/memeid-extractor/src/memeid_extractor"]
tests = ["tests", "*/memeid-extractor/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "pragma: no cover",
  "raise AssertionError",
  "raise NotImplementedError",
]
omit = [
  "src/memeid_extractor/__main__.py",
]
show_missing = true
skip_covered = false
